C51 COMPILER V9.60.0.0   DS18B20                                                           05/16/2020 14:51:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\output\DS18B20.obj
COMPILER INVOKED BY: D:\Softwares\Keil_v5\C51\BIN\C51.EXE src\DS18B20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJ
                    -ECTEXTEND PRINT(.\output\DS18B20.lst) TABS(2) OBJECT(.\output\DS18B20.obj)

line level    source

   1          #include "DS18B20.h"
   2          #include "main.h"
   3          #include "LCD12864.h"
   4          #include "ZW_SZM201.h"
   5          
   6          
   7          
   8          /*******************************************************************************
   9          * 函 数 名         : ds18b20_count_temperature
  10          * 函数功能       : 计算温度
  11          * 输    入         : 无
  12          * 输    出         : 有
  13          *******************************************************************************/
  14          
  15          float ds18b20_count_temperature(void)    
  16          {  
  17   1        float temperature;
  18   1        uint temp;
  19   1        temp=ds18b20_read_temp();
  20   1        if(temp< 0)     
  21   1          {
  22   2          temp=temp-1;
  23   2          temp=~temp;
  24   2          temperature=temp*0.0625;
  25   2       
  26   2          }
  27   1        else
  28   1          temperature=temp*0.0625;
  29   1      
  30   1        return temperature;
  31   1      }
  32          
  33          /*******************************************************************************
  34          * 函 数 名         : ds18b20_init
  35          * 函数功能       : 初始化
  36          * 输    入         : 无
  37          * 输    出         : 初始化成功返回1，失败返回0
  38          *******************************************************************************/
  39          
  40          uchar ds18b20_init()
  41          {
  42   1        uchar i;
  43   1        DSPORT = 0;           //将总线拉低480us~960us
  44   1        i = 70; 
  45   1        while(i--);           //延时642us
  46   1        DSPORT = 1;           //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  47   1        i = 0;
  48   1        while(DSPORT)         //等待DS18B20拉低总线
  49   1        {
  50   2          delay_10us(1000);
  51   2          i++;
  52   2          if(i>5)           //等待>5MS
  53   2          {
  54   3            return 0;       //初始化失败
C51 COMPILER V9.60.0.0   DS18B20                                                           05/16/2020 14:51:04 PAGE 2   

  55   3          }
  56   2        
  57   2        }
  58   1        return 1;           //初始化成功
  59   1      }
  60          
  61          /*******************************************************************************
  62          * 函 数 名         : ds18b20_write_byte
  63          * 函数功能       : 向18B20写入一个字节
  64          * 输    入         : 无
  65          * 输    出         : 无
  66          *******************************************************************************/
  67          
  68          void ds18b20_write_byte(uchar dat)
  69          {
  70   1        uint i, j;
  71   1      
  72   1        for(j=0; j<8; j++)
  73   1        {
  74   2          DSPORT = 0;           //每写入一位数据之前先把总线拉低1us
  75   2          i++;
  76   2          DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  77   2          i=6;
  78   2          while(i--);       //延时68us，持续时间最少60us
  79   2          DSPORT = 1;       //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  80   2          dat >>= 1;
  81   2        }
  82   1      }
  83          /*******************************************************************************
  84          * 函 数 名         : ds18b20_read_byte
  85          * 函数功能       : 读取一个字节
  86          * 输    入         : 无
  87          * 输    出         : 无
  88          *******************************************************************************/
  89          
  90          
  91          uchar ds18b20_read_byte()
  92          {
  93   1        uchar byte, bi;
  94   1        uint i, j;  
  95   1        for(j=8; j>0; j--)
  96   1        {
  97   2          DSPORT = 0;             //先将总线拉低1us
  98   2          i++;
  99   2          DSPORT = 1;             //然后释放总线
 100   2          i++;
 101   2          i++;                //延时6us等待数据稳定
 102   2          bi = DSPORT;            //读取数据，从最低位开始读取
 103   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
 104   2          byte = (byte >> 1) | (bi << 7);             
 105   2          i = 4;                //读取完之后等待48us再接着读取下一个数
 106   2          while(i--);
 107   2        }       
 108   1        return byte;
 109   1      }
 110          /*******************************************************************************
 111          * 函 数 名         : ds18b20_chang_temp_cmd
 112          * 函数功能       : 让18b20开始转换温度
 113          * 输    入         : 无
 114          * 输    出         : 无
 115          *******************************************************************************/
 116          
C51 COMPILER V9.60.0.0   DS18B20                                                           05/16/2020 14:51:04 PAGE 3   

 117          void  ds18b20_chang_temp_cmd()
 118          {
 119   1        ds18b20_init();
 120   1      //  delay_10us(1000);
 121   1        ds18b20_write_byte(0xcc);   //跳过ROM操作命令    
 122   1        ds18b20_write_byte(0x44);     //温度转换命令
 123   1        //Delay1ms(100);        //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 124   1         
 125   1      }
 126          /*******************************************************************************
 127          * 函 数 名         : ds18b20_read_temp_cmd
 128          * 函数功能       : 发送读取温度命令
 129          * 输    入         : 无
 130          * 输    出         : 无
 131          *******************************************************************************/
 132          
 133          void  ds18b20_read_temp_cmd()
 134          { 
 135   1      
 136   1        ds18b20_init();
 137   1      //  delay_10us(1000);
 138   1        ds18b20_write_byte(0xcc);       //跳过ROM操作命令
 139   1        ds18b20_write_byte(0xbe);       //发送读取温度命令
 140   1      }
 141          /*******************************************************************************
 142          * 函 数 名         : ds18b20_read_temp
 143          * 函数功能       : 读取温度
 144          * 输    入         : 无
 145          * 输    出         : 无
 146          *******************************************************************************/
 147          
 148          int ds18b20_read_temp()
 149          {
 150   1        int temp = 0;
 151   1        uchar tmh, tml;
 152   1        ds18b20_chang_temp_cmd();       //先写入转换命令
 153   1        ds18b20_read_temp_cmd();        //然后等待转换完后发送读取温度命令
 154   1        tml = ds18b20_read_byte();        //读取温度值共16位，先读低字节
 155   1        tmh = ds18b20_read_byte();        //再读高字节
 156   1        temp = tmh;
 157   1        temp <<= 8;
 158   1        temp |= tml;
 159   1        return temp;
 160   1      }
 161          
 162          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    275    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
